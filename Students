require 'date'
require  "../test/CustomErrors"

class Student
  @@students = []
  attr_accessor :surname, :name
  attr_reader :birth_date
  
  def initialize(name, surname, birth_date)
    validation_birth_date(birth_date)

    @name = name
    @surname = surname
    @birth_date = birth_date

    add_student
  end

  def self.students 
    @@students 
   end

   def validation_birth_date(birth_date)
    if birth_date > Date.today
      raise ArgumentError, "birth_date must be in the past"
    end 
   end  

  def calculate_age
    had_birthday_this_year = false  
    if @birth_date.month < Date.today.month ||(@birth_date.month == Date.today.month && @birth_date.day >= Date.today.day)
      had_birthday_this_year = true
    end 
    years_in_student_age = Date.today.year - @birth_date.year
    age = had_birthday_this_year ? years_in_student_age : years_in_student_age - 1

    age
  end

  def add_student
    if self.class.students.none? { |student| student.name == @name && student.surname == @surname && student.birth_date == @birth_date }    
      self.class.students << self
    else
      raise ElementInArrayExistsError
    end
  end

  def remove_student
      self.class.students.delete(self)
  end 

  def self.get_students_by_age(age)
    selected_students = @@students.select { |student| student.calculate_age == age }
  end

  def self.get_students_by_name(name)
    selected_students = @@students.select { |student| student.name == name }
  end

end
